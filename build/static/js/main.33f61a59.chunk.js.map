{"version":3,"sources":["components/home/Home.js","components/calendar/AppointmentInMonth.js","components/calendar/DayInMonth.js","components/calendar/Calendar.js","components/day/AppointmentInDay.js","components/day/Day.js","components/callInSick/Sick.js","components/appointmentManagement/AppointmentMan.js","components/patientFile/PatientItem.js","components/patientFile/PatientFiles.js","components/patientFile/PatientCard.js","components/patientFile/PatientFile.js","components/patientFile/PatientContainer.js","components/patientsRecords/Data.js","App.js","index.js"],"names":["Home","className","Component","AppointmentInMonth","show","this","props","time","format_time","patient","DaysInMonth","appointmentsJSX","appointments","sort","map","index","day","key","workingDays","counter","rel","days2","includes","push","id","dentist","assistant","treatment","Calendar","state","handleChange","bind","e","setState","target","value","preventDefault","days","appointmentsByDay","forEach","appointment","hasOwnProperty","divideByDay","a","b","time1","parseInt","time2","dayOne","prevDay","daysTwo","element","daysInMonthJSX","Object","values","appointmentsInDay","DayInMonth","onChange","AppointmentInDay","dentistSick","dentists","isSick","name","toUpperCase","text","onClick","removeAppointment","changeAppointment","indexPrev","idPrev","removeRecord","splice","Day","change","handleClick","handleChangeClick","newDay","document","getElementById","newTime","alert","prevRecord","addRecord","dayInput","removeId","found","appointments2","filter","timeOne","timeTwo","dentistMapped","type","min","max","registerCallinSick","staffRel","surname","staffFound","staffIndex","IsSick","Sick","handleChangeregisterCallinSick","isIll","registerIsSick","typeOfPerson","surName","personIsSick","personFound","personIndex","tobeProgressed","patients","indices","patientName","nextIndex","removeAppointmentPatients","assistants","setTimeout","Array","from","getElementsByClassName","checked","dentitst","onSubmit","AppointmentMan","patientSurName","progress","loading","handleSubmit","handleTreatments","patientRegister","console","log","haveAppointment","placeholder","PatientItem","handlePatientView","PatientFiles","htmlFor","inputValue","patientFilterOnChange","PatientCard","gender","phone","email","location","year","handlePatientGoBack","PatientFile","PatientContainer","handleSortPatients","sortValue","sortPatients","patientItem","isPatientViewOn","pet","filteredPatients","toLowerCase","dentistsArr","assistantsArr","patientsArr","appointmentsArr","App","sickPeople","fetch","then","response","patientData","split","data","length","region","addPatient","appointmentData","app","addAppointment","to","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.33f61a59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <h1 className=\"title\">Tandartspraktijk B.V.T.</h1>\r\n                    <i className=\"fas fa-tooth\"></i>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <h3 className=\"sub-title\">Hier werken de leukste tandartsen!</h3>\r\n                    <i className=\"far fa-smile-wink\"></i>\r\n                    <p>Kies in het menu wat je wil doen? Voor vragen kun je altijd onze service desk bellen!</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nconst format_time = time => (time < 10 ? `0${time}:00u` : `${time}:00u`);\r\n\r\n\r\nclass AppointmentInMonth extends Component{\r\n  render() {\r\n    let time = this.props.time;\r\n    let show = true;\r\n    if (time === 0) show = false;\r\n    if (show)\r\n      return (\r\n        <div className=\"appointment\">\r\n          <span className=\"time\">{format_time(this.props.time)}</span>\r\n          <span className=\"patient\">{this.props.patient}</span>\r\n        </div>\r\n      );\r\n    else \r\n      return (\r\n        <div className=\"appointment\">\r\n          <span></span>\r\n          </div>\r\n      )\r\n  }\r\n}\r\nexport default AppointmentInMonth\r\n","import React, {Component} from \"react\";\r\nimport AppointmentInMonth from \"./AppointmentInMonth\";\r\n\r\n\r\nclass DaysInMonth extends Component {\r\n  render() {\r\n    let appointments_month = this.props.appointments.sort();\r\n\r\n    const appointmentsJSX = appointments_month.map(({ day, time, patient }, index) => (\r\n      <AppointmentInMonth time={time} patient={patient} key={index} />\r\n    ));\r\n    return <div className=\"day\">{appointmentsJSX}</div>;\r\n  }\r\n}\r\n  \r\n  export default DaysInMonth;\r\n","import React, {Component} from \"react\";\r\nimport \"./Calendar.css\";\r\nimport DayInMonth from \"./DayInMonth\";\r\n\r\nconst workingDays = (counter, rel, days2) => {\r\n  counter = counter + 1;\r\n  if (counter % 7 === 6 || counter % 7 === 0) {\r\n    return <p>Vrij</p>\r\n  } else {\r\n    if (days2.includes(counter)) {\r\n      return <p>Vrij</p>\r\n    } else {\r\n      rel[counter] = [];\r\n      rel[counter].push({\r\n        id: 0,\r\n        day: counter,\r\n        time: 0,\r\n        patient: \"\",\r\n        dentist: \"\",\r\n        assistant: \"\",\r\n        treatment: \"\",\r\n      });\r\n    }\r\n  }\r\n  return counter;\r\n};\r\n\r\nclass Calendar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { dentist: \"Duncan\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ dentist: e.target.value });\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    let days = [];\r\n    let appointmentsSorted = this.props.appointments.sort(function (a, b) {\r\n      let time1 = parseInt(a.time);\r\n      let time2 = parseInt(b.time);\r\n      if (time1 < time2) {\r\n        return -1;\r\n      }\r\n      if (time1 > time2) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    const divideByDay = (appointments) => {\r\n      const appointmentsByDay = {};\r\n      appointments.forEach((appointment) => {\r\n        if (\r\n          appointment.dentist === this.state.dentist && this.state.dentist !== \"\"\r\n        ) {\r\n          const day = appointment.day;\r\n          if (!appointmentsByDay.hasOwnProperty(day)) {\r\n            appointmentsByDay[day] = [];\r\n          }\r\n          appointmentsByDay[day].push(appointment);\r\n          if (days.includes(appointment.day)) {\r\n          } else days.push(appointment.day);\r\n        }\r\n      });\r\n      return appointmentsByDay;\r\n    };\r\n\r\n    const appointmentsByDay = divideByDay(appointmentsSorted);\r\n    let dayOne = days[0];\r\n    let counter = 0;\r\n    let prevDay = 0;\r\n    let daysTwo = days;\r\n    if (dayOne > 1) {\r\n      while (counter < dayOne) {\r\n        counter = workingDays(counter, appointmentsByDay, daysTwo);\r\n        days.push(counter);\r\n      }\r\n    }\r\n\r\n    days.forEach((element) => {\r\n      if (element - prevDay > 1) {\r\n        counter = prevDay;\r\n        while (element - counter > 1) {\r\n          counter = workingDays(counter, appointmentsByDay, daysTwo);\r\n        }\r\n      }\r\n      prevDay = element;\r\n    });\r\n    if (prevDay < 26) {\r\n      counter = prevDay;\r\n      while (counter < 26) {\r\n        counter = workingDays(counter, appointmentsByDay, daysTwo);\r\n      }\r\n    }\r\n    const daysInMonthJSX = Object.values(appointmentsByDay).map((appointmentsInDay, index) => (\r\n      <DayInMonth appointments={appointmentsInDay} key={index} />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label> Tandarts:\r\n         <select onChange={this.handleChange}>\r\n              <option value=\"kies tandarts\">Kies tandarts</option>\r\n              <option value=\"Anne\">Anne</option>\r\n              <option value=\"Duncan\">Duncan</option>\r\n              <option value=\"Joost\">Joost</option>\r\n              <option value=\"Sabine\">Sabine</option>\r\n            </select>\r\n          </label>\r\n        </form>\r\n        <div className=\"calendarview\">\r\n          <div className=\"header\">\r\n            <div>Maandag</div>\r\n            <div>Dinsdag</div>\r\n            <div>Woensdag</div>\r\n            <div>Donderdag</div>\r\n            <div>Vrijdag</div>\r\n          </div>\r\n          <div className=\"table\">{daysInMonthJSX}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Calendar;","import React, {Component} from \"react\";\r\n\r\nconst format_time = time => (time < 10 ? `0${time}:00u` : `${time}:00u`);\r\n\r\nclass AppointmentInDay extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = { dentistSick: \"\" };\r\n  }\r\n\r\n  render() {\r\n    let dentistSick = false;\r\n    this.props.dentists.forEach((element) => {\r\n      if (\r\n        element.isSick === true &&\r\n        element.name.toUpperCase() === this.props.dentist.toUpperCase()\r\n      )\r\n        dentistSick = true;\r\n    });\r\n    let text = \"\";\r\n    if (dentistSick) text = \"appointmentRed\";\r\n    else text = \"appointment\";\r\n\r\n    return (\r\n      <li className={text}>\r\n        <div className=\"time\">{format_time(this.props.time)}</div>\r\n        <div className=\"patient\">Patiënt: {this.props.patient}</div>\r\n        <div className=\"dentist\">Tandarts: {this.props.dentist}</div>\r\n        <div className=\"assistant\">Assistent: {this.props.assistant}</div>\r\n        <div className=\"containerButton\">\r\n          <button\r\n            className=\"button\"\r\n            onClick={(e) => this.props.removeAppointment(this.props.patient, this.props.dentist, this.props.time)}\r\n          >\r\n            Remove\r\n        </button>\r\n          <button\r\n            className=\"button\"\r\n            onClick={(e) => this.props.changeAppointment(this.props.patient, this.props.dentist, this.props.time)}\r\n          >\r\n            Change\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default AppointmentInDay;","import React, {Component} from \"react\";\r\nimport \"./Day.css\";\r\nimport AppointmentInDay from \"./AppointmentInDay\";\r\n\r\nlet indexPrev = 0;\r\nlet idPrev = 0;\r\n\r\nconst getSortedTime = (rel) =>\r\n  rel.sort(function (a, b) {\r\n    let timeOne = parseInt(a.time);\r\n    let timeTwo = parseInt(b.time);\r\n    if (timeOne < timeTwo) {\r\n      return -1;\r\n    }\r\n    if (timeOne > timeTwo) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\nconst searchPrevRecord = (appointments, day, dentist, time) => {\r\n  appointments.forEach((element, index) => {\r\n    if (parseInt(element.day) === parseInt(day) &&\r\n      element.dentist === dentist &&\r\n      parseInt(element.time) === parseInt(time)) {\r\n      indexPrev = index;\r\n      idPrev = element.id;\r\n    }\r\n  });\r\n  return [indexPrev, idPrev];\r\n};\r\n\r\nconst removeRecord = (appointments, indexPrev) => appointments.splice(indexPrev, 1);\r\n\r\nconst addRecord = (appointments, idPrev, dentist, patient, newDay, newTime) =>\r\n  appointments.push({\r\n    id: idPrev,\r\n    dentist: dentist,\r\n    patient: patient,\r\n    day: newDay,\r\n    time: newTime,\r\n  });\r\n\r\nclass Day extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dentist: \"Duncan\",\r\n      day: 0,\r\n      time: 0,\r\n      appointments: [],\r\n      change: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChangeClick = this.handleChangeClick.bind(this);\r\n    this.removeAppointment = this.removeAppointment.bind(this);\r\n    this.changeAppointment = this.changeAppointment.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ dentist: e.target.value, change: false });\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleChangeClick(e) {\r\n    let newDay = parseInt(document.getElementById(\"newDay\").value);\r\n    let newTime = parseInt(document.getElementById(\"nemTime\").value);\r\n    if (newDay % 7 === 6 || newDay % 7 === 0)\r\n      alert(\"choose an other day this is a weekendday!\");\r\n    else {\r\n      indexPrev = 0;\r\n      this.props.appointments.forEach((element, index) => {\r\n        if (element.day === newDay && element.dentist === this.state.dentist && element.time === newTime)\r\n          indexPrev = index;\r\n      });\r\n      if (indexPrev !== 0)\r\n        alert(\"dentist has already an appointment on this day and time\");\r\n      else {\r\n        idPrev = 0;\r\n        let prevRecord = searchPrevRecord(\r\n          this.props.appointments,\r\n          this.state.day,\r\n          this.state.dentist,\r\n          this.state.time\r\n        );\r\n        indexPrev = prevRecord[0];\r\n        idPrev = prevRecord[1];\r\n\r\n        if (indexPrev !== 0) {\r\n          removeRecord(this.props.appointments, indexPrev);\r\n          addRecord(\r\n            this.props.appointments,\r\n            idPrev,\r\n            this.state.dentist,\r\n            this.state.patient,\r\n            newDay,\r\n            newTime);\r\n          this.setState({\r\n            appointments: this.props.appointments,\r\n            change: false\r\n          });\r\n          \r\n        } else alert(\"nothing found\");\r\n      }\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleClick(e) {\r\n    let dayInput = document.getElementById(\"day\").value;\r\n    this.setState({ day: dayInput, change: false });\r\n    e.preventDefault()\r\n  }\r\n\r\n  removeAppointment(patient, dentist, time) {\r\n    let removeId = 0;\r\n    let found = false;\r\n    this.props.appointments.forEach((element, index) => {\r\n      if (element.patient === patient &&\r\n        element.dentist === dentist &&\r\n        element.time === time) {\r\n        found = true;\r\n        removeId = index;\r\n      }\r\n    });\r\n    if (found === true)\r\n      removeRecord(this.props.appointments, removeId);\r\n    this.setState({ appointments: this.props.appointments });\r\n  }\r\n\r\n\r\n  changeAppointment(patient, dentist, time) {\r\n    this.setState({\r\n      patient: patient,\r\n      dentist: dentist,\r\n      time: time,\r\n      change: true,\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ appointments: this.props.appointments });\r\n  }\r\n  \r\n\r\n  render() {\r\n    let appointments2 = this.state.appointments.filter((element) => element.dentist === this.state.dentist &&\r\n      parseInt(element.day) === parseInt(this.state.day));\r\n    let appointmentsSorted = getSortedTime(appointments2);\r\n\r\n    const appointmentsJSX = appointmentsSorted.map(({ time, patient, dentist, assistant }, index) => (\r\n      <AppointmentInDay\r\n        time={time}\r\n        patient={patient}\r\n        dentist={dentist}\r\n        assistant={assistant}\r\n        changeAppointment={this.changeAppointment}\r\n        removeAppointment={this.removeAppointment}\r\n        dentists={this.props.dentists}\r\n        key={index}\r\n      />\r\n    )\r\n    );\r\n    let dentistMapped = this.props.dentists.map((element) => (\r\n      <option value={element.name}>{element.name}</option>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <h3>\r\n          Verwijder of wijzig hier een afspraak\r\n      </h3>\r\n        <form className=\"dayquery\">\r\n          {this.state.change ? (\r\n            <div>\r\n              <label>Dentist : {this.state.dentist}</label><br />\r\n              <label>Day : {this.state.day}</label>\r\n              <p>Time : {this.state.time}</p>\r\n              <p>Patient: {this.state.patient}</p>\r\n              <label>New Day</label>\r\n              <input id=\"newDay\" type=\"number\" name=\"day\" min=\"1\" max=\"28\" />\r\n              <label>New Time</label>\r\n              <input\r\n                id=\"newTime\"\r\n                type=\"number\"\r\n                name=\"time\"\r\n                min=\"7\"\r\n                max=\"19\"\r\n              />\r\n              <button onClick={this.handleChangeClick}>Change</button>\r\n            </div>\r\n          ) : (<div className=\"inputcontainer\">\r\n            <label className=\"dentistlabel\">\r\n              Dentist\r\n            <select onChange={this.handleChange}>{dentistMapped}</select>\r\n            </label>\r\n            <label>Day\r\n            <input id=\"day\" type=\"number\" name=\"day\" min=\"1\" max=\"28\" />\r\n            </label>\r\n            <button onClick={this.handleClick}>show dayschudule</button>\r\n          </div>)}\r\n        </form>\r\n        <ul className=\"dayview\">{appointmentsJSX}</ul>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\nexport default Day;\r\n","import React, { Component } from 'react'\r\nimport \"./sick.css\"\r\n\r\n\r\nconst registerCallinSick = (\r\n    staffRel,\r\n    name,\r\n    surname,\r\n    staffFound,\r\n    staffIndex\r\n) => {\r\n    staffRel.map((element, index) => {\r\n        if (element.name.toUpperCase() === name.toUpperCase() &&\r\n            element.surname.toUpperCase() === surname.toUpperCase()) {\r\n            element.IsSick = true;\r\n            staffFound = true;\r\n            staffIndex = index;\r\n        }\r\n        return element;\r\n    });\r\n    return [staffFound, staffIndex];\r\n};\r\n\r\nconst removeAppointmentPatients = (\r\n    appointments,\r\n    name,\r\n    surName,\r\n    isIll\r\n) => {\r\n    let indices = [];\r\n    if (isIll === true) {\r\n        let patientName = name.toUpperCase() + \" \" + surName.toUpperCase();\r\n        appointments.forEach((element, index) => {\r\n            if (element.patient.toUpperCase() === patientName) indices.push(index);\r\n        });\r\n        let nextIndex = 0;\r\n        indices.forEach((index) => {\r\n            appointments.splice(index - nextIndex, 1);\r\n            nextIndex = nextIndex + 1;\r\n        });\r\n    }\r\n    return indices;\r\n};\r\n\r\n\r\n\r\nexport default class Sick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            patients: [],\r\n            dentitst: [],\r\n            assistants: [],\r\n            appointments: [],\r\n            tobeProgressed: \"\",\r\n            isIll: \"\",\r\n        }\r\n        this.registerIsSick = this.registerIsSick.bind(this);\r\n        this.handleChangeregisterCallinSick = this.handleChangeregisterCallinSick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange = (e) => e.preventDefault();\r\n\r\n    handleChangeregisterCallinSick = (e) => {\r\n        if (e.target.value === \"sick\") this.setState({ isIll: true });\r\n        else this.setState({ isIll: false });\r\n    }\r\n\r\n    registerIsSick = (e) => {\r\n        let typeOfPerson = document.getElementById(\"typeOfPerson\").value;\r\n        let name = document.getElementById(\"name\").value;\r\n        let surName = document.getElementById(\"surName\").value;\r\n        let personIsSick = null;\r\n        let personFound = null;\r\n        let personIndex = null;\r\n        let isIll = this.state.isIll;\r\n        this.setState({ tobeProgressed: true });\r\n        e.preventDefault();\r\n        switch (typeOfPerson) {\r\n            case \"patient\":\r\n                personIsSick = registerCallinSick(\r\n                    this.props.patients,\r\n                    name,\r\n                    surName,\r\n                    personFound,\r\n                    personIndex\r\n                );\r\n                personFound = personIsSick[0];\r\n                personIndex = personFound[1];\r\n                if (personFound === true)\r\n                    alert(\"patient not found!\");\r\n                else if (isIll === true)\r\n                    removeAppointmentPatients(\r\n                        this.props.appointments,\r\n                        name,\r\n                        surName,\r\n                        isIll\r\n                    );\r\n                break;\r\n            case \"assistant\":\r\n                personIsSick = registerCallinSick(\r\n                    this.props.assistants,\r\n                    name,\r\n                    surName,\r\n                    personFound,\r\n                    personIndex\r\n                );\r\n                personFound = personIsSick[0];\r\n                personIndex = personIsSick[1];\r\n                if (personFound === false)\r\n                    alert(\"this assistant isn't found!\");\r\n                else this.setState({ assistants: this.props.assistants });\r\n                break;\r\n            case \"dentist\":\r\n                personIsSick = registerCallinSick(\r\n                    this.props.dentists,\r\n                    name,\r\n                    surName,\r\n                    personFound,\r\n                    personIndex\r\n                );\r\n                personFound = personIsSick[0];\r\n                personIndex = personIsSick[1];\r\n                if (personFound === false)\r\n                    alert(\"this dentist isn't found!\")\r\n                else this.setState({ dentists: this.props.dentists });\r\n                break;\r\n            \r\n            default:\r\n                alert(\"something is wrong! please check if everything is correct!\")\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({ tobeProgressed: false });\r\n            document.getElementById(\"typeOfPerson\").value = \"\";\r\n            document.getElementById(\"name\").value = \"\";\r\n            document.getElementById(\"surName\").value = \"\";\r\n            let sickRadio = Array.from(document.getElementsByClassName(\"sick\"));\r\n            sickRadio.forEach((element) => (element.checked = false));\r\n        }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            patients: this.props.patients,\r\n            assistants: this.props.assistants,\r\n            dentists: this.props.dentists,\r\n            appointments: this.props.appointments,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Here you can call someone SICK of BETTER!</h1>\r\n                <br />\r\n                <br />\r\n                <form onSubmit={this.registerIsSick}>\r\n                    <div className=\"sickContainer\">\r\n                        <label className=\"typeOfPerson\">Kind of person</label>\r\n                        <select id=\"typeOfPerson\" onChange={this.handleChange}>\r\n                            <option value=\"\">Choose Person</option>\r\n                            <option value=\"dentist\">Dentist</option>\r\n                            <option value=\"assistant\">Assistant</option>\r\n                            <option value=\"patient\">Patient</option>\r\n                        </select>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"sickContainer\">\r\n                        <p className=\"sickRegisterName\">Firstname</p>\r\n                        <input id=\"name\" type=\"text\" name=\"name\" />\r\n                        <p className=\"sickRegisterSurName\">Surname</p>\r\n                        <input id=\"surName\" type=\"text\" name=\"surName\" />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"sickContainer\">\r\n                        <p className=\"registerSick\">Call Sick/Better</p>\r\n                        <p className=\"registerSick2\">Sick</p>\r\n                        <input\r\n                            className=\"sick\"\r\n                            type=\"radio\"\r\n                            name=\"isIll\"\r\n                            value=\"sick\"\r\n                            onChange={this.handleChangeregisterCallinSick}\r\n                        />\r\n                        <p className=\"registerSick2\">Better</p>\r\n                        <input\r\n                            className=\"sick\"\r\n                            type=\"radio\"\r\n                            name=\"isIll\"\r\n                            value=\"better\"\r\n                            onChange={this.handleChangeregisterCallinSick}\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <button className=\"submitButton\">\r\n                        conform the registration\r\n                    </button>\r\n                </form>\r\n                {this.state.tobeProgressed ? <p>Your progess will be saved</p> : <p></p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./appointmentMan.css\";\r\n\r\nclass AppointmentMan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appointment: [],\r\n            dentist: \"\",\r\n            assistant: \"\",\r\n            patientName: \"\",\r\n            patientSurName: \"\",\r\n            day: 0,\r\n            newTime: 0,\r\n            treatment: \"\",\r\n            appointments: [],\r\n            patients: [],\r\n            assistants: [],\r\n            dentists: [],\r\n            progress: false,\r\n            loading: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTreatments = this.handleTreatments.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            appointments: this.props.appointments,\r\n            dentists: this.props.dentists,\r\n            assistants: this.props.assistants,\r\n            patients: this.props.patients,\r\n            loading: this.props.loading\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        if (e.target.name === \"dentist\") this.setState({ dentist: e.target.value });\r\n        else this.setState({ assistant: e.target.value });\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleTreatments(e) {\r\n        this.setState({ treatment: e.target.value });\r\n        e.preventDefault();\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let dentist = document.getElementById(\"dentist\").value;\r\n        let assistant = document.getElementById(\"assistant\").value;\r\n        let day = parseInt(document.getElementById(\"day\").value);\r\n        let time = parseInt(document.getElementById(\"time\").value);\r\n        let patientName = document.getElementById(\"patientName\").value;\r\n        let patientSurName = document.getElementById(\"patientSurName\").value;\r\n        let treatment = document.getElementById(\"treatment\").value;\r\n        if (day < 1 || day > 28) alert(\"choose a day between 1 and 28\");\r\n        else if (day % 7 === 0 || day % 7 === 6) alert(\"only weekdays avaible\");\r\n        else if (time < 8 || time >= 18) alert(\"choose a time between 8 and 18\");\r\n        else {\r\n            let patientRegister = false;\r\n            let isIll = false;\r\n            this.state.patients.forEach((element) => {\r\n                if (element.name.toUpperCase() === patientName.toUpperCase() &&\r\n                    element.surname.toUpperCase() === patientSurName.toUpperCase()) {\r\n                    patientName = element.name;\r\n                    console.log(element.surname)\r\n                    patientSurName = element.surname;\r\n                    console.log(patientName + patientSurName)\r\n                    if (element.isSick === true) isIll = true;\r\n                    patientRegister = true;\r\n                }\r\n            });\r\n            if (patientRegister === false)\r\n                alert(\"Patient is not in register\");\r\n            else {\r\n                if (isIll === true)\r\n                    alert(\"this patient is sick, patient cann't make appointment! Call better or choose other patient\")\r\n                else {\r\n                    let haveAppointment = false;\r\n                    let id = 0;\r\n                    this.props.appointments.forEach((element) => {\r\n                        if (element.dentist === dentist &&\r\n                            parseInt(element.time) === parseInt(time) &&\r\n                            parseInt(element.day) === parseInt(day))\r\n                            haveAppointment = true;\r\n                        if (element.id > id) id = element.id;\r\n                    });\r\n                    id += 1;\r\n                    if (haveAppointment === true)\r\n                        alert(\"This dentist has already an appointment on this day and time\");\r\n                    else {\r\n                        this.setState({ progress: true });\r\n                        this.props.appointments.push({\r\n                            id: id,\r\n                            day: day,\r\n                            time: time,\r\n                            patient: patientName + \" \" + patientSurName,\r\n                            dentist: dentist,\r\n                            assistant: assistant,\r\n                            treatment: treatment,\r\n                        });\r\n                        this.setState({ appointments: this.props.appointments });\r\n                        setTimeout(() => {\r\n                            this.setState({ progress: false });\r\n                            document.getElementById(\"dentist\").value = \"\";\r\n                            document.getElementById(\"assistant\").value = \"\";\r\n                            document.getElementById(\"time\").value = \"\";\r\n                            document.getElementById(\"day\").value = \"\";\r\n                            document.getElementById(\"patientName\").value = \"\";\r\n                            document.getElementById(\"patientSurName\").value = \"\";\r\n                            document.getElementById(\"treatment\").value = \"\";\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.loading !== true) {\r\n            return <h1>Loading...</h1>\r\n        } else {\r\n            let progress = false;\r\n            if (this.state.progress) progress = false;\r\n\r\n            return (\r\n                <div className=\"appointment-container\">\r\n                    <h3>verwijderen of wijzigen van een afspraak? ga naar het dagoverzicht!</h3>\r\n                    <br />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"container1\">\r\n                            <p className=\"label\">Dentist</p>\r\n                            <select id=\"dentist\" onChange={this.handleChange}>\r\n                                <option value=\"\">Choose dentist</option>\r\n                                <option value=\"Anne\">Anne</option>\r\n                                <option value=\"Duncan\">Duncan</option>\r\n                                <option value=\"Joost\">Joost</option>\r\n                                <option value=\"Sabine\">Sabine</option>\r\n                            </select>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"container2\">\r\n                            <p className=\"label\">Assistant</p>\r\n                            <select id=\"assistant\" onChange={this.handleChange}>\r\n                                <option value=\"\">No assistant</option>\r\n                                <option value=\"Andre\">Andre</option>\r\n                                <option value=\"Josje\">Josje</option>\r\n                            </select>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"container3\">\r\n                            <p className=\"label\">Day</p>\r\n                            <input id=\"day\" type=\"number\" name=\"day\" min=\"1\" max=\"28\" placeholder=\"0\" />\r\n                        </div>\r\n                        <div className=\"container4\">\r\n                            <p className=\"label\">Time</p>\r\n                            <input id=\"time\" type=\"number\" name=\"time\" value={this.state.time} placeholder=\"0\" />\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"container5\">\r\n                            <p className=\"label\">FirstName</p>\r\n                            <input id=\"patientName\" type=\"text\" placeholder=\"name\" />\r\n                            <p className=\"label\">LastName</p>\r\n                            <input id=\"patientSurName\" type=\"text\" placeholder=\"surname\" />\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"container6\">\r\n                            <p className=\"label\">Treatment</p>\r\n                            <select id=\"treatment\" onChange={this.handleTreatments}>\r\n                                <option value=\"\">Choose treatment</option>\r\n                                <option value=\"controle\">Controle</option>\r\n                                <option value=\"mondhygiene\">Mondhygiëne</option>\r\n                                <option value=\"vullen\">Vullen</option>\r\n                                <option value=\"wortelkanaal\">Wortelkanaal</option>\r\n                            </select>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <button className=\"submitButton\">Add Appointment</button>\r\n                    </form>\r\n                    {progress ? (\r\n                        <p>Appointment is in calendar!</p>\r\n                    ) : (\r\n                            <p></p>\r\n                        )}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default AppointmentMan;","import React from 'react';\r\n\r\nconst PatientItem = (props) => {\r\n    const { name, surname } = props.patient;\r\n\r\n    return (\r\n        <div className=\"patient-item-container\">\r\n            <div className=\"patient-item\" onClick={() => props.handlePatientView(props.patient)}>\r\n                <div className=\"patient-info\">\r\n                    <h2>{name}</h2>\r\n                    <h2>{ surname}</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem;","import React from 'react';\r\nimport PatientItem from './PatientItem';\r\n\r\nconst PatientFiles = (props) => {\r\n    return (\r\n        <div>\r\n        <label htmlFor=\"search\">Search by name</label>\r\n            <input type=\"text\" value={props.inputValue} onChange={props.patientFilterOnChange} />\r\n            <div className=\"patient-list\">\r\n                {props.patients.map(patient => {\r\n                    return <PatientItem\r\n                        patient={patient}\r\n                        key={patient.id}\r\n                        handlePatientView={props.handlePatientView}\r\n                    />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PatientFiles;","import React from 'react';\r\n\r\n\r\nconst PatientCard = (props) => {\r\n    const { name, surname, gender, phone, email, location, year } = props.patient;\r\n\r\n    return (\r\n        <div className=\"patient-card-container\">\r\n            <div className=\"patient-card\" onClick={() => props.handlePatientGoBack(props.patient)}>\r\n                <h2><b>Name : </b>{name}</h2>\r\n                <h2><b>Surname : </b>{surname}</h2>\r\n                <p><b>Year : </b>{ year}</p>\r\n                <p><b>Location : </b>{location}</p>\r\n                <p><b>Gender : </b>{gender}</p>\r\n                <p><b>Phone : </b>{phone}</p>\r\n                <p><b>E-mail : </b>{ email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PatientCard;","import React from 'react';\r\nimport PatientCard from './PatientCard';\r\n\r\nconst PatientFile = (props) => {\r\n    return (\r\n        <div>\r\n            <button onClick={props.handlePatientGoBack}>Back</button>\r\n            <PatientCard\r\n                patient={props.patient}\r\n                handlePatientGoBack={props.handlePatientGoBack}\r\n                key={props.patient.id}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default PatientFile;","import React, { Component } from 'react'\r\nimport PatientFiles from \"./PatientFiles\";\r\nimport PatientFile from \"./PatientFile\";\r\nimport './patientfile.css';\r\n\r\nclass PatientContainer extends Component {\r\n    constructor() {\r\n        super()\r\n   \r\n        this.state = {\r\n            patients: [],\r\n            patient: {},\r\n            isPatientViewOn: false,\r\n            sortValue: \"\",\r\n            inputValue: \"\",\r\n\r\n        }\r\n        this.patientFilterOnChange = this.patientFilterOnChange.bind(this);\r\n        this.handleSortPatients = this.handleSortPatients.bind(this);\r\n        this.sortPatients = this.sortPatients.bind(this);\r\n        this.handlePatientView = this.handlePatientView.bind(this);\r\n        this.handlePatientGoBack = this.handlePatientGoBack.bind(this);\r\n    }\r\n        componentDidMount() {\r\n            this.setState({ patients: this.props.patients })\r\n    }\r\n    \r\n        patientFilterOnChange = (e) => {\r\n            console.log(\"hi from onChange\", e.target.value)\r\n            this.setState({\r\n                inputValue: e.target.value\r\n            });\r\n    }\r\n    \r\n    handleSortPatients = (e) => {\r\n            this.setState({sortValue: e.target.value})\r\n    }\r\n    \r\n    sortPatients = (patients) => {\r\n        if (this.state.sortValue === \"name\") {\r\n            return [...patients].sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1\r\n                } else if (a.name < b.name) {\r\n                    return -1\r\n                } else {\r\n                    return 0\r\n                }\r\n            })\r\n        }\r\n        else if (this.state.sortValue === \"surname\") {\r\n            return [...patients].sort((a, b) => {\r\n                if (a.surname > b.surname) {\r\n                    return 1\r\n                } else if (a.surname < b.surname) {\r\n                    return -1\r\n                } else {\r\n                    return 0\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return patients;\r\n        }\r\n    }\r\n    \r\n    handlePatientView = (patientItem) => {\r\n        this.setState({\r\n            patient: patientItem,\r\n            isPatientViewOn: !this.state.isPatientViewOn\r\n        })\r\n    }\r\n\r\n    handlePatientGoBack = () => {\r\n        this.setState({\r\n            pet: {},\r\n            isPatientViewOn: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        const filteredPatients = this.state.patients.filter(patient => {\r\n            return patient.name.toLowerCase().includes(this.state.inputValue.toLowerCase())\r\n        })\r\n\r\n        return (\r\n            <div className=\"patient-container\">\r\n                <label>Sort Patients</label>\r\n\r\n                <select name=\"sortValue\" onChange={this.handleSortPatients}>\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"surname\">Surname</option>\r\n                </select>\r\n                {this.state.isPatientViewOn ?\r\n                    <PatientFile \r\n                    patient={this.state.patient}\r\n                    handlePatientGoBack={this.handlePatientGoBack}\r\n                    />\r\n                    :\r\n                    <PatientFiles\r\n                        patients={this.sortPatients(filteredPatients)}\r\n                        handlePatientView={this.handlePatientView}\r\n                        patientFilterOnChange={this.patientFilterOnChange}\r\n                        inputValue={this.state.inputValue}\r\n                    />\r\n    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PatientContainer","const dentistsArr =\r\n    [\r\n        {\r\n            name: \"Anne\",\r\n            surname: \"Snijder\",\r\n            email: \"anne.snijder@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209002\",\r\n            isSick: false\r\n        },\r\n        {\r\n            name: \"Duncan\",\r\n            surname: \"Goos\",\r\n            email: \"duncan.goos@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209001\",\r\n            isSick: false\r\n        },\r\n        {\r\n            name: \"Joost\",\r\n            surname: \"Boonstra\",\r\n            email: \"joost.boonstra@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209004\",\r\n            isSick: false\r\n        },\r\n        {\r\n            name: \"Sabine\",\r\n            surname: \"Koning\",\r\n            email: \"sabine.koning@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209005\",\r\n            isSick: false\r\n        }\r\n    ];\r\n\r\nconst assistantsArr =\r\n    [\r\n        {\r\n            name: \"Josje\",\r\n            surname: \"Bos\",\r\n            email: \"josje.bos@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209003\",\r\n            isSick: false\r\n        },\r\n        {\r\n            name: \"Andre\",\r\n            surname: \"Witteman\",\r\n            email: \"andre.witteman@tandartspraktijkbvt.nl\",\r\n            phone: \"0205209006\",\r\n            isSick: false\r\n        }\r\n    ];\r\n\r\n\r\n\r\n\r\n  \r\nexport { dentistsArr, assistantsArr}","import React, {Component} from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./components/home/Home\";\r\nimport Calendar from \"./components/calendar/Calendar\";\r\nimport Day from \"./components/day/Day\";\r\nimport Sick from \"./components/callInSick/Sick\";\r\nimport AppointmentMan from \"./components/appointmentManagement/AppointmentMan\"\r\nimport PatientContainer from \"./components/patientFile/PatientContainer\"\r\nimport {dentistsArr, assistantsArr} from \"./components/patientsRecords/Data\"\r\n\r\nconst patientsArr = [];\r\n  const addPatient = patient => {\r\n    const data = patient.split(\";\");\r\n    if (data.length === 8) {\r\n      const name = data[0];\r\n      const surname = data[1];\r\n      const gender = data[2];\r\n      const region = data[3];\r\n      const year = data[4];\r\n      const email = data[5];\r\n      const phone = data[6];\r\n      const isSick = data[7];\r\n      patientsArr.push({\r\n        name, surname, gender, region, year, email, phone, isSick\r\n      })\r\n    }\r\n};\r\n  const appointmentsArr = [];\r\n  const addAppointment = app => {\r\n    const data = app.split(\";\");\r\n    if (data.length === 7) {\r\n      const id = data[0];\r\n      const day = data[1];\r\n      const time = data[2];\r\n      const patient = data[3];\r\n      const dentist = data[4];\r\n      const assistant = data[5];\r\n      const treatment = data[6];\r\n      appointmentsArr.push({ id, day, time, patient, dentist, assistant, treatment })\r\n    }\r\n};\r\n\r\nclass App extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dentists: [],\r\n      assistants: [],\r\n      patients: [],\r\n      appointments: [],\r\n      sickPeople: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetch(\"/patientData/patientendata.csv\")\r\n      .then((response) => response.text())\r\n      .then((patientData) => {\r\n      const patientItems = patientData.split(\"\\n\");\r\n      patientItems.forEach((patient) => addPatient(patient));\r\n      this.setState({ patients: patientsArr, loading: true })\r\n    });\r\n    fetch(\"/patientData/appointments.csv\")\r\n      .then((response) => response.text())\r\n      .then((appointmentData) => {\r\n        const appointmentItems = appointmentData.split(\"\\n\");\r\n        appointmentItems.forEach((app) => addAppointment(app));\r\n        this.setState({ appointments: appointmentsArr, loading: true });\r\n      })\r\n    this.setState({ dentists: dentistsArr })\r\n    this.setState({ assistants: assistantsArr })\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    if (this.state.loading !== true) {\r\n      return <h1>Loading....</h1>\r\n    } else {\r\n      return (\r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"/\"} className=\"nav-link\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"./calendar\"}>Calendar view</Link>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"./day\"} className=\"nav-link\">{\" \"}Day view{ \" \"}</Link>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"/sick\"} className=\"nav-link\">{\" \" }Call in Sick/Better{\" \" }</Link>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"/appointmentMan\"}>New Appointment</Link>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <Link to={\"/patientContainer\"}>PatientFiles</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <main>\r\n              <Switch>\r\n                <Route path=\"/calendar\">\r\n                  <Calendar key={this.state.appointments.id} appointments={this.state.appointments} dentists={this.state.dentists}/>\r\n                </Route>\r\n                <Route path=\"/day\">\r\n                  <Day key={this.state.appointments.id} appointments={this.state.appointments} dentists={this.state.dentists}/>\r\n                </Route>\r\n                <Route path=\"/sick\">\r\n                  <Sick \r\n                    appointments={this.state.appointments}\r\n                    dentists={this.state.dentists}\r\n                    patients={this.state.patients}\r\n                    assistants={this.state.assistants}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/appointmentMan\">\r\n                  <AppointmentMan {...this.state}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/patientContainer\">\r\n                  <PatientContainer patients={this.state.patients}/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        </Router>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}